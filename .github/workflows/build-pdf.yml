name: Generate PDF and Update Noco-DB

on:
  push:
    branches:
      - main
    paths:
      - "src/site/notes/**"
  pull_request:
    branches:
      - main
    paths:
      - "src/site/notes/**"

jobs:
  generate-and-update-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info \
            jq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markdown weasyprint beautifulsoup4

      - name: Generate PDFs per topic
        run: |
          # Генеруємо PDF для кожної підпапки в src/site/notes
          printf "src/site/notes\n\n\n" | python codetomd.py

      - name: Update PDF records in Noco-DB
        env:
          NOCO_DB_API_URL: "https://nocodb.soyka.pp.ua"
          NOCO_DB_TABLE_ID: "m3plh50uwtk34zd"
          NOCO_DB_API_TOKEN: ${{ secrets.NOCO_DB_API_KEY }}
        run: |
          echo "Processing PDF files for Noco-DB update..."
          for pdf in src/site/notes/*.pdf; do
            filename=$(basename "$pdf")
            echo "Processing file: $filename"
            # URL-кодуємо ім'я файлу, щоб уникнути проблем із спецсимволами
            encoded_filename=$(python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.argv[1]))" "$filename")
            # Виконуємо GET-запит для перевірки наявності запису з даним filename
            record=$(curl -s --request GET \
              --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records?where=filename,eq,$encoded_filename" \
              --header "xc-token: $NOCO_DB_API_TOKEN")
            if echo "$record" | grep -q '"data":'; then
              echo "Record for $filename not found. Creating a new record..."
              curl --request POST \
                --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records" \
                --header "xc-token: $NOCO_DB_API_TOKEN" \
                -F "filename=$filename" \
                -F "file=@$pdf"
            else
              recordId=$(echo "$record" | jq -r '.data[0].id')
              echo "Record for $filename exists (ID: $recordId). Updating the record..."
              curl --request PATCH \
                --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records/$recordId" \
                --header "xc-token: $NOCO_DB_API_TOKEN" \
                -F "filename=$filename" \
                -F "file=@$pdf"
            fi
          done