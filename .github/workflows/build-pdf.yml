name: Generate PDF and Update Noco-DB

on:
  push:
    branches:
      - main
    paths:
      - "src/site/notes/**"
  pull_request:
    branches:
      - main
    paths:
      - "src/site/notes/**"

jobs:
  generate-and-update-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info \
            jq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markdown weasyprint beautifulsoup4

      - name: Generate PDFs per topic
        run: |
          printf "src/site/notes\n\n\n" | python codetomd.py

      - name: Update PDF records in Noco-DB
        env:
          NOCO_DB_API_URL: "https://nocodb.soyka.pp.ua"

          # Перевірте, що ці значення відповідають ДІЙСНІЙ таблиці / view у вашому проекті:
          NOCO_DB_TABLE_ID: "mo1skyako59jzjh"  
          NOCO_DB_VIEW_ID: "vw2u02w5djy06gxg"  

          NOCO_DB_API_TOKEN: ${{ secrets.NOCO_DB_API_KEY }}
        run: |
          echo "Закидаємо PDF files for Noco-DB update..."

          for pdf in src/site/notes/*.pdf; do
            # Оригінальна назва
            original_name=$(basename "$pdf")

            # Транслітерація
            translit_name=$(echo "$original_name" | sed '
              y/абвгґдеєжзиіїйклмнопрстуфхцчшщюяьАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЮЯЬ/abvhgdeyezhzyiijklmnoprstufxczchshshchyuyaABVHGDEYeZhZYIIJKLmnoprstufxczchshshchYUYa/;
              s/ё/yo/g; s/ъ//g; s/ы/y/g; s/э/e/g; s/Ё/Yo/g; s/Ъ//g; s/Ы/Y/g; s/Э/E/g;
            ' | iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE | tr -cd '[:alnum:]._-' | tr ' ' '_')

            echo "Оригінальне ім'я: $original_name => транслітероване: $translit_name"

            # Формуємо where=(title,eq,<translit_name>)
            # Якщо у вас у таблиці alias з великої літери, змініть на (Title,eq,...)
            where=$(python3 -c "
import urllib.parse, sys
val = sys.argv[1]
filter_expr = f'(title,eq,{val})'  # <-- якщо alias 'title'
encoded = urllib.parse.quote(filter_expr)
print(encoded)
" "$translit_name")

            # GET /api/v2/tables/:tableId/records?where=(title,eq,translit_name)
            response=$(curl -s --request GET \
              --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records?where=$where&offset=0&limit=25&viewId=$NOCO_DB_VIEW_ID" \
              --header "xc-token: $NOCO_DB_API_TOKEN")

            # Перевіряємо кількість знайдених записів у полі .list
            record_count=$(echo "$response" | jq '.list | length' 2>/dev/null)

            # Якщо list взагалі не масив або json з помилкою — підстраховка
            if [ -z "$record_count" ] || ! [[ "$record_count" =~ ^[0-9]+$ ]]; then
              echo "Отримано некоректну відповідь. Можливо, INVALID_FILTER або Unauthorized."
              echo "Відповідь NocoDB:"
              echo "$response"
              continue
            fi

            if [ "$record_count" -eq 0 ]; then
              echo "Створюємо новий запис (title='$translit_name')..."

              attempt=0
              max_attempts=3
              while [ $attempt -lt $max_attempts ]; do
                # POST: створити новий
                # Зверніть увагу: поле з alias "title", вкладення "Attachment"
                result=$(curl --silent --show-error --fail --request POST \
                  --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records" \
                  --header "xc-token: $NOCO_DB_API_TOKEN" \
                  -F "title=$translit_name" \
                  -F "Attachment=@$pdf;filename=$translit_name" )
                
                if [[ $? -eq 0 ]]; then
                  echo "Успішно створено (title='$translit_name')."
                  break
                else
                  attempt=$((attempt+1))
                  echo "Помилка створення. Повторна спроба... ($attempt/$max_attempts)"
                  sleep 20
                fi
              done

            else
              # Запис існує — оновлюємо
              recordId=$(echo "$response" | jq -r '.list[0].Id')

              if [ "$recordId" == "null" ] || [ -z "$recordId" ]; then
                echo "Не вдалося отримати Id. Відповідь NocoDB:"
                echo "$response"
                continue
              fi

              echo "Оновлюємо запис (Id=$recordId, title='$translit_name')..."

              attempt=0
              max_attempts=3
              while [ $attempt -lt $max_attempts ]; do
                # PATCH: оновити
                result=$(curl --silent --show-error --fail --request PATCH \
                  --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records/$recordId" \
                  --header "xc-token: $NOCO_DB_API_TOKEN" \
                  -F "title=$translit_name" \
                  -F "Attachment=@$pdf;filename=$translit_name" )

                if [[ $? -eq 0 ]]; then
                  echo "Успішно оновлено (Id=$recordId)."
                  break
                else
                  attempt=$((attempt+1))
                  echo "Помилка оновлення. Повторна спроба... ($attempt/$max_attempts)"
                  sleep 20
                fi
              done
            fi
          done