name: Generate PDF and Upload to MinIO via Cloudflare Tunnel

on:
  push:
    branches:
      - main
    paths:
      - "src/site/notes/**"
  pull_request:
    branches:
      - main
    paths:
      - "src/site/notes/**"

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info \
            unzip

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markdown weasyprint beautifulsoup4

      - name: Generate PDFs per topic
        run: |
          printf "src/site/notes\n\n\n" | python codetomd.py

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS CLI for MinIO via Cloudflare
        env:
          AWS_ACCESS_KEY_ID: 77icD4OgvRKPKF198eiC
          AWS_SECRET_ACCESS_KEY: B3kWQMmF4zZLb9W6dboJrdDQAMWBrVyAG4ySFBIx
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1
          aws configure set default.s3.addressing_style path

      - name: Upload PDFs (with transliteration) to MinIO
        shell: bash
        run: |
          echo "Uploading PDF files to MinIO bucket via Cloudflare Tunnel (one-by-one, with transliteration)..."

          # Знайти всі PDF у каталозі src/site/notes
          mapfile -t pdf_files < <(find src/site/notes -type f -iname "*.pdf")

          for pdf in "${pdf_files[@]}"; do
            # Витягаємо оригінальне ім'я
            orig_name="$(basename "$pdf")"

            # Транслітеруємо в латиницю (забираємо й інші нелатинські символи, пробіли тощо).
            # 1) Перетворюємо кирилицю на латиницю (спрощеною заміною символів),
            # 2) iconv - видаляємо решту нелатинських символів,
            # 3) Залишаємо лише [a-zA-Z0-9._-]
            safe_name="$(
              echo "$orig_name" | sed '
                y/абвгґдеєжзиіїйклмнопрстуфхцчшщюяАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЮЯ/abvhgdeyezhzyiijklmnoprstufxczchshshchyuyaABVHGDEYEZhZYIIJKLMNOPRSTUFXCZCHSHSHCHYUYA/;
                s/ё/yo/g; s/ъ//g; s/ы/y/g; s/э/e/g;
                s/Ё/Yo/g; s/Ъ//g; s/Ы/Y/g; s/Э/E/g;
              ' |
              iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE |
              tr -cd '[:alnum:]._-'
            )"

            echo "→ Original: $orig_name"
            echo "→ Transliterated: $safe_name"

            # Завантажуємо окремим викликом aws s3 cp
            # Додаємо таймаути на випадок підвисань чи затримок
            aws --endpoint-url http://apiminio.exodus.pp.ua \
                s3 cp "$pdf" "s3://exodusbase/$safe_name" \
                --cli-read-timeout 360 \
                --cli-connect-timeout 360

            # Якщо треба, можна перевіряти код виходу:
            if [[ $? -ne 0 ]]; then
              echo "Помилка під час завантаження: $orig_name"
              exit 1
            fi

          done

          echo "Успішне завершення завантаження PDF-файлів."
