name: Generate PDF and Update Noco-DB

on:
  push:
    branches:
      - main
    paths:
      - "src/site/notes/**"
  pull_request:
    branches:
      - main
    paths:
      - "src/site/notes/**"

jobs:
  generate-and-update-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info \
            jq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markdown weasyprint beautifulsoup4

      - name: Generate PDFs per topic
        run: |
          printf "src/site/notes\n\n\n" | python codetomd.py

      - name: Update PDF records in Noco-DB
        env:
          NOCO_DB_API_URL: "https://nocodb.soyka.pp.ua"
          NOCO_DB_TABLE_ID: "mdb4f2t1ngchrom"
          NOCO_DB_VIEW_ID: "vwknikxbrl1mobu9"
          NOCO_DB_API_TOKEN: ${{ secrets.NOCO_DB_API_KEY }}
          ATTACHMENT_FIELD_ID: "cyl3kusky2kreq3"  # ID поля для прикріплень
        run: |
          echo "Закидаємо PDF files for Noco-DB update..."

          for pdf in src/site/notes/*.pdf; do
            # Транслітерація кирилиці в латиницю
            filename=$(basename "$pdf" | sed '
              y/абвгґдеєжзиіїйклмнопрстуфхцчшщюяьАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЮЯЬ/abvhgdeyezhzyiijklmnoprstufxczchshshchyuyaABVHGDEYeZhZYIIJKLmnoprstufxczchshshchYUYa/;
              s/ё/yo/g; s/ъ//g; s/ы/y/g; s/э/e/g; s/Ё/Yo/g; s/Ъ//g; s/Ы/Y/g; s/Э/E/g;
            ' | iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE | tr -cd '[:alnum:]._-' | tr ' ' '_')
            
            echo "Оригінальне ім'я: $(basename "$pdf"), транслітероване ім'я: $filename"
            
            # Кодовано параметр пошуку
            where=$(python3 -c "import urllib.parse, sys; print(urllib.parse.quote('filename,eq,' + sys.argv[1]))" "$filename")
            
            # Пошук запису за filename з параметрами offset, limit та viewId
            response=$(curl -s --request GET \
              --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records?where=$where&offset=0&limit=25&viewId=$NOCO_DB_VIEW_ID" \
              --header "xc-token: $NOCO_DB_API_TOKEN")
            
            if echo "$response" | jq -e '.data | length == 0' > /dev/null; then
              echo "Створення нового запису для $filename..."
              
              attempt=0
              max_attempts=3
              while [ $attempt -lt $max_attempts ]; do
                response=$(curl --silent --show-error --fail --request POST \
                  --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records" \
                  --header "xc-token: $NOCO_DB_API_TOKEN" \
                  -F "filename=$filename" \
                  -F "$ATTACHMENT_FIELD_ID=@$pdf")
            
                if [[ $? -eq 0 ]]; then
                  echo "Успішно створено запис для $filename"
                  break
                fi
                
                attempt=$((attempt+1))
                echo "Повторна спроба... ($attempt/$max_attempts)"
                sleep 2
              done
            else
              recordId=$(echo "$response" | jq -r '.data[0].id')
              
              if [[ "$recordId" == "null" ]]; then
                echo "Помилка: recordId відсутній, пропускаємо $filename"
                continue
              fi
              
              echo "Оновлення існуючого запису $recordId для $filename..."
              
              attempt=0
              max_attempts=3
              while [ $attempt -lt $max_attempts ]; do
                response=$(curl --silent --show-error --fail --request PATCH \
                  --url "$NOCO_DB_API_URL/api/v2/tables/$NOCO_DB_TABLE_ID/records/$recordId" \
                  --header "xc-token: $NOCO_DB_API_TOKEN" \
                  -F "filename=$filename" \
                  -F "$ATTACHMENT_FIELD_ID=@$pdf")
            
                if [[ $? -eq 0 ]]; then
                  echo "Успішно оновлено запис для $filename"
                  break
                fi
                
                attempt=$((attempt+1))
                echo "Повторна спроба... ($attempt/$max_attempts)"
                sleep 2
              done
            fi
          done