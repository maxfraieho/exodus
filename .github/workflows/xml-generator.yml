name: Generate Repository XML and Upload to MinIO via Cloudflare

on:
  push:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.md"
      - "*.txt"
  pull_request:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.md"
      - "*.txt"

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest

    env:
      MINIO_ENDPOINT_URL: https://apiminio.exodus.pp.ua
      AWS_DEFAULT_REGION: us-east-1
      AWS_S3_DISABLE_MULTIPART: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.MINIO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MINIO_SECRET_KEY }}
          aws-region: us-east-1
          endpoint-url: ${{ env.MINIO_ENDPOINT_URL }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

      - name: Generate transliteration script
        run: |
          cat > transliterate.sh << 'EOF'
          #!/bin/bash
          transliterate() {
              local input="$1"
              input=$(echo "$input" | sed 's/а/a/g; s/б/b/g; ...') # Abbreviated for brevity
              input=$(echo "$input" | sed 's/[[:space:]]\+/-/g' | tr '[:upper:]' '[:lower:]')
              input=$(echo "$input" | sed 's/[^a-z0-9-]//g' | sed 's/--*/-/g; s/^-//; s/-$//')
              [ ${#input} -lt 3 ] && input="${input}bucket"
              [ ${#input} -gt 63 ] && input="${input:0:63}"
              echo "$input"
          }
          transliterate "$1"
          EOF
          chmod +x transliterate.sh

      - name: Generate XML files
        run: |
          mkdir -p xml-outputs
          [ ! -f "repomix.config.json" ] && { echo "❌ repomix.config.json not found"; exit 1; }
          for folder in $(find src/site/notes -maxdepth 1 -type d); do
            if [ "$folder" != "src/site/notes" ]; then
              folder_name=$(basename "$folder")
              bucket_name=$(./transliterate.sh "$folder_name")
              if [[ ! "$bucket_name" =~ ^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$ ]]; then
                echo "❌ Invalid bucket name: $bucket_name"
                exit 1
              fi
              npx repomix --config repomix.config.json --include "$folder/**" --output "xml-outputs/${bucket_name}.xml"
              [ ! -s "xml-outputs/${bucket_name}.xml" ] && { echo "❌ Empty XML: ${bucket_name}.xml"; exit 1; }
            fi
          done
          npx repomix --config repomix.config.json --ignore "src/site/notes/**" --output "xml-outputs/common.xml"
          [ ! -s "xml-outputs/common.xml" ] && { echo "❌ Empty common.xml"; exit 1; }

      - name: Upload XML files to MinIO
        run: |
          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then
              bucket_name=$(basename "$xml_file" .xml)
              aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api create-bucket --bucket "$bucket_name" --region us-east-1 || echo "ℹ️ Bucket $bucket_name already exists"
              aws --endpoint-url "$MINIO_ENDPOINT_URL" s3 cp "$xml_file" "s3://${bucket_name}/${bucket_name}.xml" --content-type application/xml
            fi
          done

      - name: Verify uploaded files
        run: |
          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then
              bucket_name=$(basename "$xml_file" .xml)
              local_size=$(wc -c < "$xml_file")
              remote_size=$(aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api head-object --bucket "$bucket_name" --key "${bucket_name}.xml" --query 'ContentLength' --output text)
              [ "$remote_size" = "$local_size" ] && echo "✅ Verified: ${bucket_name}.xml" || echo "❌ Size mismatch: ${bucket_name}.xml"
            fi
          done
