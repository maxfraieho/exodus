name: Generate Repository XML and Upload to MinIO via Cloudflare

on:
  push:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.*"
  pull_request:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.*"

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest

    env:
      MINIO_ENDPOINT_URL: https://apiminio.exodus.pp.ua
      AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_S3_DISABLE_MULTIPART: "1"

    steps:
      # –ö—Ä–æ–∫ 1: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–¥—É –∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
      - name: Checkout repository
        uses: actions/checkout@v4

      # –ö—Ä–æ–∫ 2: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Ç–∞ AWS CLI v2
      - name: Install system dependencies and AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # –ö—Ä–æ–∫ 3: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è AWS CLI –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ MinIO
      - name: Configure AWS CLI for MinIO via Cloudflare
        run: |
          aws configure set default.region us-east-1
          aws configure set default.s3.addressing_style path
          aws configure set default.s3.signature_version s3v4
          aws configure set default.s3.max_concurrent_requests 1
          aws configure set default.s3.max_bandwidth 50MB/s

      # –ö—Ä–æ–∫ 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ MinIO
      - name: Verify AWS CLI credentials with MinIO
        run: |
          echo "üîê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ MinIO..."
          if ! aws --endpoint-url "$MINIO_ENDPOINT_URL" s3 ls; then
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π MinIO endpoint"
            exit 1
          fi
          echo "‚úÖ –î–æ—Å—Ç—É–ø –¥–æ MinIO –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ"

      # –ö—Ä–æ–∫ 5: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∫–∏—Ä–∏–ª–∏—Ü—ñ
      - name: Generate transliteration script
        run: |
          cat > transliterate.sh << 'EOF'
          #!/bin/bash
          transliterate() {
              local input="$1"
              input=$(echo "$input" | sed 's/–∞/a/g; s/–±/b/g; s/–≤/v/g; s/–≥/h/g; s/“ë/g/g; s/–¥/d/g; s/–µ/e/g; s/—î/ye/g; s/–∂/zh/g; s/–∑/z/g; s/–∏/y/g; s/—ñ/i/g; s/—ó/yi/g; s/–π/y/g; s/–∫/k/g; s/–ª/l/g; s/–º/m/g; s/–Ω/n/g; s/–æ/o/g; s/–ø/p/g; s/—Ä/r/g; s/—Å/s/g; s/—Ç/t/g; s/—É/u/g; s/—Ñ/f/g; s/—Ö/kh/g; s/—Ü/ts/g; s/—á/ch/g; s/—à/sh/g; s/—â/shch/g; s/—å//g; s/—é/yu/g; s/—è/ya/g')
              input=$(echo "$input" | sed 's/–ê/A/g; s/–ë/B/g; s/–í/V/g; s/–ì/H/g; s/“ê/G/g; s/–î/D/g; s/–ï/E/g; s/–Ñ/Ye/g; s/–ñ/Zh/g; s/–ó/Z/g; s/–ò/Y/g; s/–Ü/I/g; s/–á/Yi/g; s/–ô/Y/g; s/–ö/K/g; s/–õ/L/g; s/–ú/M/g; s/–ù/N/g; s/–û/O/g; s/–ü/P/g; s/–†/R/g; s/–°/S/g; s/–¢/T/g; s/–£/U/g; s/–§/F/g; s/–•/Kh/g; s/–¶/Ts/g; s/–ß/Ch/g; s/–®/Sh/g; s/–©/Shch/g; s/–¨//g; s/–Æ/Yu/g; s/–Ø/Ya/g')
              input=$(echo "$input" | sed 's/[[:space:]]\+/-/g' | tr '[:upper:]' '[:lower:]')
              input=$(echo "$input" | sed 's/[^a-z0-9-]//g' | sed 's/--*/-/g; s/^-//; s/-$//')
              if [ ${#input} -lt 3 ]; then 
                  input="${input}bucket"
              fi
              if [ ${#input} -gt 63 ]; then 
                  input="${input:0:63}"
              fi
              echo "$input"
          }
          transliterate "$1"
          EOF
          chmod +x transliterate.sh

      # –ö—Ä–æ–∫ 6: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è XML-—Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏ –≤ src/site/notes/
      - name: Generate XML files for each folder
        run: |
          mkdir -p xml-outputs
          if [ ! -d "src/site/notes/" ]; then
            echo "‚ùå src/site/notes/ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
            exit 1
          fi

          for folder in src/site/notes/*/; do
            if [ -d "$folder" ]; then
              folder_name=$(basename "$folder")
              bucket_name=$(./transliterate.sh "$folder_name")

              if [[ ! "$bucket_name" =~ ^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$ ]] && [[ ${#bucket_name} -ne 3 ]]; then
                echo "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –Ω–∞–∑–≤–∞ –±–∞–∫–µ—Ç—É: $bucket_name"
                exit 1
              fi

              echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è XML: $folder_name -> $bucket_name"
              npx repomix --config repomix.config.json --include "$folder/**" --output "xml-outputs/${bucket_name}.xml"
              
              if [ ! -s "xml-outputs/${bucket_name}.xml" ]; then
                echo "‚ùå XML-—Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: ${bucket_name}.xml"
                exit 1
              fi

              echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: ${bucket_name}.xml"
            fi
          done

      # –ö—Ä–æ–∫ 7: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è common.xml –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
      - name: Generate common.xml for root files
        run: |
          echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è common.xml –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤"
          npx repomix --config repomix.config.json --ignore "src/site/notes/**" --output "xml-outputs/common.xml"
          
          if [ ! -s "xml-outputs/common.xml" ]; then
            echo "‚ùå common.xml –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π"
            exit 1
          fi

          echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: common.xml"

      # –ö—Ä–æ–∫ 8: –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è XML-—Ñ–∞–π–ª—ñ–≤ —è–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ñ–≤
      - name: Upload XML outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xml-outputs
          path: xml-outputs/
          retention-days: 7

      # –ö—Ä–æ–∫ 9: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–ø–æ–º—ñ–∂–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      - name: Create upload helper scripts
        run: |
          cat > create_bucket.sh << 'EOF'
          #!/bin/bash
          bucket_name="$1"
          if aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api head-bucket --bucket "$bucket_name" 2>/dev/null; then
            echo "‚ÑπÔ∏è –ë–∞–∫–µ—Ç '$bucket_name' –≤–∂–µ —ñ—Å–Ω—É—î"
          else
            echo "üî® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∫–µ—Ç—É '$bucket_name'"
            if ! aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api create-bucket --bucket "$bucket_name" --region us-east-1; then
              echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –±–∞–∫–µ—Ç—É '$bucket_name'"
              exit 1
            fi
          fi
          EOF
          
          cat > upload_file.sh << 'EOF'
          #!/bin/bash
          bucket_name="$1"
          file_path="$2"
          max_retries=3
          retry_count=0

          if [ ! -f "$file_path" ]; then
            echo "‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $file_path"
            exit 1
          fi

          file_size=$(wc -c < "$file_path")
          echo "üìä –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: $file_size –±–∞–π—Ç—ñ–≤"

          if [ "$file_size" -eq 0 ]; then
            echo "‚ùå –§–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π: $file_path"
            exit 1
          fi

          while [ $retry_count -lt $max_retries ]; do
            echo "üîÑ –°–ø—Ä–æ–±–∞ $((retry_count + 1)): –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${bucket_name}.xml"
            
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¢–Ü–õ–¨–ö–ò s3api put-object —á–µ—Ä–µ–∑ Cloudflare + acl
            if aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api put-object \
              --bucket "$bucket_name" \
              --key "${bucket_name}.xml" \
              --body "$file_path" \
              --content-type "application/xml" \
              --acl public-read \
              --metadata-directive REPLACE; then
              echo "‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${bucket_name}.xml"
              exit 0
            fi

            retry_count=$((retry_count + 1))
            echo "‚ö†Ô∏è –°–ø—Ä–æ–±–∞ $retry_count –∑ $max_retries –Ω–µ –≤–¥–∞–ª–∞—Å—è –¥–ª—è ${bucket_name}.xml"
            
            if [ $retry_count -lt $max_retries ]; then
              echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é..."
              sleep 5
            fi
          done

          echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ ${bucket_name}.xml –ø—ñ—Å–ª—è $max_retries —Å–ø—Ä–æ–±"
          exit 1
          EOF

          chmod +x create_bucket.sh upload_file.sh

      # –ö—Ä–æ–∫ 10: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è XML-—Ñ–∞–π–ª—ñ–≤ —É MinIO
      - name: Upload XML files to MinIO
        run: |
          echo "üöÄ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è XML —É MinIO..."

          export AWS_MAX_ATTEMPTS=3
          export AWS_RETRY_MODE=adaptive

          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then
              bucket_name=$(basename "$xml_file" .xml)

              echo "üì¶ –û–±—Ä–æ–±–∫–∞ —Ñ–∞–π–ª—É: $xml_file -> –±–∞–∫–µ—Ç: $bucket_name"

              if [ ! -s "$xml_file" ]; then
                echo "‚ùå –§–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π: $xml_file"
                continue
              fi

              if ! ./create_bucket.sh "$bucket_name"; then
                echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∫–µ—Ç $bucket_name"
                exit 1
              fi

              if ! ./upload_file.sh "$bucket_name" "$xml_file"; then
                echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª $xml_file"
                exit 1
              fi

              echo "‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: $xml_file"
            fi
          done

          echo "üéâ –í—Å—ñ —Ñ–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–æ MinIO"

      # –ö—Ä–æ–∫ 11: –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
      - name: Verify uploaded files
        run: |
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."

          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then
              bucket_name=$(basename "$xml_file" .xml)

              echo "üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—É –≤ –±–∞–∫–µ—Ç—ñ: $bucket_name"

              if aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api head-object \
                --bucket "$bucket_name" \
                --key "${bucket_name}.xml" > /dev/null 2>&1; then
                echo "‚úÖ –§–∞–π–ª ${bucket_name}.xml –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ"

                remote_size=$(aws --endpoint-url "$MINIO_ENDPOINT_URL" s3api head-object \
                  --bucket "$bucket_name" \
                  --key "${bucket_name}.xml" \
                  --query 'ContentLength' --output text)

                local_size=$(wc -c < "$xml_file")

                if [ "$remote_size" = "$local_size" ]; then
                  echo "‚úÖ –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É —Å–ø—ñ–≤–ø–∞–¥–∞—î: $remote_size –±–∞–π—Ç—ñ–≤"
                else
                  echo "‚ö†Ô∏è –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î: –ª–æ–∫–∞–ª—å–Ω–∏–π=$local_size, –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π=$remote_size"
                fi
              else
                echo "‚ùå –§–∞–π–ª ${bucket_name}.xml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ"
              fi
            fi
          done
