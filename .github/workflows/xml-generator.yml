name: Generate Repository XML and Upload to MinIO via Cloudflare

on:
  push:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.*"
  pull_request:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "*.*"

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest

    env:
      MINIO_ENDPOINT_URL: https://apiminio.exodus.pp.ua
      AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      # –ö—Ä–æ–∫ 1: Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # –ö—Ä–æ–∫ 2: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —ñ AWS CLI (–æ–Ω–æ–≤–ª–µ–Ω–æ)
      - name: Install system dependencies and AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl bc git # –î–æ–¥–∞–ª–∏ bc –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω—å, git –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # –ö—Ä–æ–∫ 3: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è AWS CLI –¥–ª—è MinIO —á–µ—Ä–µ–∑ Cloudflare
      - name: Configure AWS CLI for MinIO via Cloudflare
        run: |
          aws configure set default.region us-east-1
          aws configure set default.s3.addressing_style path
          aws configure set default.s3.signature_version s3v4
          aws configure set default.s3.max_concurrent_requests 1
          aws configure set default.s3.max_bandwidth 50MB/s

      # –ö—Ä–æ–∫ 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ MinIO
      - name: Verify AWS CLI credentials with MinIO
        run: |
          echo "üîê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ MinIO..."
          if ! aws --endpoint-url "$MINIO_ENDPOINT_URL" s3 ls; then
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π MinIO endpoint"
            exit 1
          fi
          echo "‚úÖ –î–æ—Å—Ç—É–ø –¥–æ MinIO –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ"

      # –ö—Ä–æ–∫ 5: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è transliteration —Å–∫—Ä–∏–ø—Ç–∞
      - name: Generate transliteration script
        run: |
          cat > transliterate.sh << 'EOF'
          #!/bin/bash
          transliterate() {
              local input="$1"
              # –¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –ª—ñ—Ç–µ—Ä
              input=$(echo "$input" | sed 's/–∞/a/g; s/–±/b/g; s/–≤/v/g; s/–≥/h/g; s/“ë/g/g; s/–¥/d/g; s/–µ/e/g; s/—î/ye/g; s/–∂/zh/g; s/–∑/z/g; s/–∏/y/g; s/—ñ/i/g; s/—ó/yi/g; s/–π/y/g; s/–∫/k/g; s/–ª/l/g; s/–º/m/g; s/–Ω/n/g; s/–æ/o/g; s/–ø/p/g; s/—Ä/r/g; s/—Å/s/g; s/—Ç/t/g; s/—É/u/g; s/—Ñ/f/g; s/—Ö/kh/g; s/—Ü/ts/g; s/—á/ch/g; s/—à/sh/g; s/—â/shch/g; s/—å//g; s/—é/yu/g; s/—è/ya/g')
              input=$(echo "$input" | sed 's/–ê/A/g; s/–ë/B/g; s/–í/V/g; s/–ì/H/g; s/“ê/G/g; s/–î/D/g; s/–ï/E/g; s/–Ñ/Ye/g; s/–ñ/Zh/g; s/–ó/Z/g; s/–ò/Y/g; s/–Ü/I/g; s/–á/Yi/g; s/–ô/Y/g; s/–ö/K/g; s/–õ/L/g; s/–ú/M/g; s/–ù/N/g; s/–û/O/g; s/–ü/P/g; s/–†/R/g; s/–°/S/g; s/–¢/T/g; s/–£/U/g; s/–§/F/g; s/–•/Kh/g; s/–¶/Ts/g; s/–ß/Ch/g; s/–®/Sh/g; s/–©/Shch/g; s/–¨//g; s/–Æ/Yu/g; s/–Ø/Ya/g')
              # –ó–∞–º—ñ–Ω–∞ –ø—Ä–æ–±—ñ–ª—ñ–≤ –Ω–∞ –¥–µ—Ñ—ñ—Å–∏ —Ç–∞ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
              input=$(echo "$input" | sed 's/[[:space:]]\+/-/g' | tr '[:upper:]' '[:lower:]')
              # –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å–∏–º–≤–æ–ª—ñ–≤, –∫—Ä—ñ–º –ª—ñ—Ç–µ—Ä –ª–∞—Ç–∏–Ω–∏—Ü—ñ, —Ü–∏—Ñ—Ä —Ç–∞ –¥–µ—Ñ—ñ—Å—ñ–≤
              input=$(echo "$input" | sed 's/[^a-z0-9-]//g' | sed 's/--*/-/g; s/^-//; s/-$//')
              
              # –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏ –Ω–∞–∑–≤–∏ –±–∞–∫–µ—Ç—É –∑–≥—ñ–¥–Ω–æ –ø—Ä–∞–≤–∏–ª MinIO/S3
              # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 3 —Å–∏–º–≤–æ–ª–∏ (–¥–æ–¥–∞—î–º–æ "bucket", —è–∫—â–æ –∫–æ—Ä–æ—Ç—à–µ)
              if [ ${#input} -lt 3 ]; then 
                  input="${input}bucket"
              fi
              # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 63 —Å–∏–º–≤–æ–ª–∏
              if [ ${#input} -gt 63 ]; then 
                  input="${input:0:63}"
              fi
              # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –Ω–∞–∑–≤–∞ –±–∞–∫–µ—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —à–∞–±–ª–æ–Ω—É: –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —ñ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –ª—ñ—Ç–µ—Ä–æ—é/—Ü–∏—Ñ—Ä–æ—é, –º—ñ—Å—Ç–∏—Ç—å –ª—ñ—Ç–µ—Ä–∏, —Ü–∏—Ñ—Ä–∏ –∞–±–æ –¥–µ—Ñ—ñ—Å–∏
              if [[ ! "$input" =~ ^[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$ ]]; then
                echo "‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: –¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–æ–≤–∞–Ω–∞ –Ω–∞–∑–≤–∞ –±–∞–∫–µ—Ç—É '$input' –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ—é. –°–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏..."
                input=$(echo "$input" | sed 's/[^a-z0-9-]//g') # –í–∏–¥–∞–ª—è—î–º–æ –±—É–¥—å-—è–∫—ñ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ñ —Å–∏–º–≤–æ–ª–∏
                if [ ${#input} -lt 3 ]; then input="${input}bucket"; fi
                if [ ${#input} -gt 63 ]; then input="${input:0:63}"; fi
                # –§—ñ–Ω–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
                if [[ ! "$input" =~ ^[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$ ]]; then
                  echo "‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–µ–∫—Ç–Ω—É –Ω–∞–∑–≤—É –±–∞–∫–µ—Ç—É –∑ '$1'. –û—Å—Ç–∞—Ç–æ—á–Ω–∞ –Ω–∞–∑–≤–∞: '$input'"
                  exit 1
                fi
              fi
              echo "$input"
          }
          transliterate "$1"
          EOF
          chmod +x transliterate.sh

      # –ö—Ä–æ–∫ 6: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è XML –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏
      - name: Generate XML files for each folder
        run: |
          mkdir -p xml-outputs
          if [ ! -d "src/site/notes/" ]; then
            echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è src/site/notes/ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."
            # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–∞–ø–æ–∫ –∑ –Ω–æ—Ç–∞—Ç–∫–∞–º–∏, –º–æ–∂–ª–∏–≤–æ, —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, —è–∫—â–æ –Ω–µ —Ö–æ—á–µ–º–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ common.xml.
            # –ê–ª–µ —è–∫—â–æ –æ—á—ñ–∫—É—î—Ç—å—Å—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤, —Ç–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞. –ó–∞–ª–∏—à–∞—î–º–æ exit 1.
            exit 1
          fi

          found_notes_folders=false
          for folder in src/site/notes/*/; do
            if [ -d "$folder" ]; then
              found_notes_folders=true
              folder_name=$(basename "$folder")
              bucket_name=$(./transliterate.sh "$folder_name")

              echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è XML –¥–ª—è –ø–∞–ø–∫–∏: $folder_name (–ë–∞–∫–µ—Ç: $bucket_name)"
              
              # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ repomix –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
              if ! command -v repomix &> /dev/null
              then
                  echo "‚ùå repomix –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è repomix..."
                  npm install -g repomix
                  if [ $? -ne 0 ]; then
                      echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è repomix."
                      exit 1
                  fi
              fi

              # –í–∏–∫–æ–Ω–∞–Ω–Ω—è repomix
              npx repomix --config repomix.config.json --include "$folder/**" --output "xml-outputs/${bucket_name}.xml"
              
              if [ ! -s "xml-outputs/${bucket_name}.xml" ]; then
                echo "‚ùå XML-—Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è '$folder_name' (–≤–∏–≤—ñ–¥: xml-outputs/${bucket_name}.xml)"
                exit 1
              fi

              echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: ${bucket_name}.xml"
            fi
          done
          
          # –Ø–∫—â–æ –Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –ø–∞–ø–∫–∏ –≤ src/site/notes/, –∞–ª–µ common.xml –º–∞—î –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏—Å—è, —Ç–æ —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ–º–∏–ª–∫–æ—é.
          # –ü—Ä–æ—Ç–µ, —è–∫—â–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É, —â–æ–± –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ common.xml –ª–∏—à–µ —Ç–æ–¥—ñ, –∫–æ–ª–∏ —î —ñ–Ω—à—ñ –ø–∞–ø–∫–∏, —Ç–æ —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.
          # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ common.xml –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –∑–∞–≤–∂–¥–∏, —è–∫—â–æ —î —Ñ–∞–π–ª–∏ –ø–æ–∑–∞ src/site/notes/.

      # –ö—Ä–æ–∫ 7: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è common.xml –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
      - name: Generate common.xml for root files
        run: |
          echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è common.xml –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
          
          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ repomix –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
          if ! command -v repomix &> /dev/null
          then
              echo "‚ùå repomix –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è repomix..."
              npm install -g repomix
              if [ $? -ne 0 ]; then
                  echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è repomix."
                  exit 1
              fi
          fi
          
          # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è common.xml –∑ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º –ø–∞–ø–∫–∏ –∑ –Ω–æ—Ç–∞—Ç–∫–∞–º–∏
          npx repomix --config repomix.config.json --ignore "src/site/notes/**" --output "xml-outputs/common.xml"
          
          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ common.xml –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —ñ –Ω–µ —î –ø–æ—Ä–æ–∂–Ω—ñ–º
          if [ ! -s "xml-outputs/common.xml" ]; then
            echo "‚ö†Ô∏è common.xml –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π. –ú–æ–∂–ª–∏–≤–æ, –Ω–µ–º–∞—î —Ñ–∞–π–ª—ñ–≤ –ø–æ–∑–∞ src/site/notes/."
            # –ó–∞–º—ñ—Å—Ç—å exit 1, —Ç—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ª–æ–≥—ñ—á–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Ü–µ–π —Ñ–∞–π–ª –∞–±–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—ñ–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —Ü–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ.
            # –î–ª—è –±–µ–∑–ø–µ–∫–∏, —è–∫—â–æ –æ—á—ñ–∫—É—î—Ç—å—Å—è –∑–∞–≤–∂–¥–∏ –æ–¥–∏–Ω common.xml, —Ç–æ –∑–∞–ª–∏—à–∞—î–º–æ exit 1.
            # –Ø–∫—â–æ –∂ common.xml –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, —Ç–æ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞: echo "‚ö†Ô∏è common.xml –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π."
            # exit 1 # –ó–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏, —è–∫—â–æ —Ñ–∞–π–ª—ñ–≤ –ø–æ–∑–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é –Ω–µ–º–∞—î.
            echo "‚úÖ common.xml –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π (—Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–º, —è–∫—â–æ –Ω–µ–º–∞—î —Ñ–∞–π–ª—ñ–≤ –ø–æ–∑–∞ src/site/notes/)."
          else
            echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: common.xml"
          fi

      # –ö—Ä–æ–∫ 8: Upload XML outputs as artifacts
      - name: Upload XML outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xml-outputs
          path: xml-outputs/
          retention-days: 7

      # –ö—Ä–æ–∫ 9: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è MinIO Client
      - name: Install MinIO Client
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/
          mc --version

      # –ö—Ä–æ–∫ 10: –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è MinIO Client
      - name: Configure MinIO Client
        run: |
          mc alias set minio "$MINIO_ENDPOINT_URL" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" --api S3v4

      # –ö—Ä–æ–∫ 11: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è XML-—Ñ–∞–π–ª—ñ–≤ —É MinIO —á–µ—Ä–µ–∑ mc
      - name: Upload XML files with MinIO Client
        run: |
          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ñ–∞–π–ª —ñ—Å–Ω—É—î
              bucket_name=$(basename "$xml_file" .xml)
              echo "üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É: $xml_file -> minio/$bucket_name/"
              
              # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∫–µ—Ç—É (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
              mc mb -q --ignore-existing minio/$bucket_name
              if [ $? -ne 0 ]; then
                echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –±–∞–∫–µ—Ç—É '$bucket_name'."
                exit 1
              fi
              
              # –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
              mc cp "$xml_file" "minio/$bucket_name/${bucket_name}.xml"
              if [ $? -ne 0 ]; then
                echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É '$xml_file' —É –±–∞–∫–µ—Ç '$bucket_name'."
                exit 1
              fi
              
              # –î–æ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É –ø—ñ—Å–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è (–Ω–µ –∑–∞–≤–∂–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞, –∞–ª–µ –º–æ–∂–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é)
              # echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó (5 —Å–µ–∫—É–Ω–¥)..."
              # sleep 5 # –ó–∞–∑–≤–∏—á–∞–π –∫—Ä–∞—â–µ –ø–æ–∫–ª–∞–¥–∞—Ç–∏—Å—è –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
              
              echo "‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${bucket_name}.xml"
            fi
          done

      # –ö—Ä–æ–∫ 12: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—î—é –æ–¥–∏–Ω–∏—Ü—å —Ç–∞ –¥–æ–ø—É—Å–∫–æ–º
      - name: Verify uploaded files with retry logic
        run: |
          # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó human-readable size –≤ –±–∞–π—Ç–∏
          to_bytes() {
            local size_str="$1"
            local unit="$2"
            local size_bytes=0

            # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±—ñ–ª–∏ –∑ —á–∏—Å–ª–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 209 807)
            size_str=$(echo "$size_str" | tr -d ' ')

            case "$unit" in
              KiB) size_bytes=$(echo "$size_str * 1024" | bc -l) ;;
              MiB) size_bytes=$(echo "$size_str * 1024 * 1024" | bc -l) ;;
              GiB) size_bytes=$(echo "$size_str * 1024 * 1024 * 1024" | bc -l) ;;
              TiB) size_bytes=$(echo "$size_str * 1024 * 1024 * 1024 * 1024" | bc -l) ;;
              kB)  size_bytes=$(echo "$size_str * 1000" | bc -l) ;;
              MB)  size_bytes=$(echo "$size_str * 1000 * 1000" | bc -l) ;;
              GB)  size_bytes=$(echo "$size_str * 1000 * 1000 * 1000" | bc -l) ;;
              TB)  size_bytes=$(echo "$size_str * 1000 * 1000 * 1000 * 1000" | bc -l) ;;
              Bytes|Byte|B) size_bytes="$size_str" ;; # –Ø–∫—â–æ –æ–¥–∏–Ω–∏—Ü—è Bytes, –ø—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
              *)
                echo "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É: $unit"
                return 1 # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –æ–¥–∏–Ω–∏—Ü—è –Ω–µ–≤—ñ–¥–æ–º–∞
                ;;
            esac
            # –û–∫—Ä—É–≥–ª—é—î–º–æ –¥–æ —Ü—ñ–ª–æ–≥–æ —á–∏—Å–ª–∞ –±–∞–π—Ç—ñ–≤
            echo "$size_bytes" | awk '{printf "%d\n", $1}'
          }

          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ñ–∞–π–ª –¥—ñ–π—Å–Ω–æ —ñ—Å–Ω—É—î
              filename=$(basename "$xml_file")
              bucket_name=$(basename "$xml_file" .xml)
              local_size=$(wc -c < "$xml_file" | tr -d ' ')
              
              echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—É: $filename"
              echo "üìä –õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: $local_size –±–∞–π—Ç"
              
              remote_bytes=""
              # –°–ø—Ä–æ–±–∏ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É
              for attempt in {1..5}; do
                echo "üîÑ –°–ø—Ä–æ–±–∞ $attempt –∑ 5 –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É..."
                
                # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ–∞–π–ª –∑ MinIO
                stat_output=$(mc stat "minio/$bucket_name/${bucket_name}.xml" 2>&1)
                
                if [ $? -eq 0 ]; then # –Ø–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ mc stat —É—Å–ø—ñ—à–Ω–∞
                  # –í–∏—Ç—è–≥—É—î–º–æ —Ä—è–¥–æ–∫ –∑ —Ä–æ–∑–º—ñ—Ä–æ–º. –®—É–∫–∞—î–º–æ "Size :" –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É —Ç–∞ –º–æ–∂–ª–∏–≤–∏—Ö –ø—Ä–æ–±—ñ–ª—ñ–≤ –Ω–∞ –ø–æ—á–∞—Ç–∫—É.
                  size_line=$(echo "$stat_output" | grep -i '^ *Size :')
                  
                  if [ -n "$size_line" ]; then
                    # –í–∏—Ç—è–≥—É—î–º–æ —á–∏—Å–µ–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É. –í—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∏—Å–ª–∞ –∑ –∫–æ–º–∞–º–∏ —Ç–∞ –ø—Ä–æ–±—ñ–ª–∞–º–∏.
                    # –ü—Ä–∏–∫–ª–∞–¥: "Size : 209 807 Bytes" –∞–±–æ "Size : 2.1 MiB"
                    size_value_raw=$(echo "$size_line" | sed -E 's/^ *Size *: *([0-9.,]+)(.*)$/\1/' | tr -d ' ')
                    # –í–∏—Ç—è–≥—É—î–º–æ –æ–¥–∏–Ω–∏—Ü—é –≤–∏–º—ñ—Ä—É (–ª—ñ—Ç–µ—Ä–∏).
                    size_unit_raw=$(echo "$size_line" | sed -E 's/^ *Size *: *[0-9.,]+[ ]*([a-zA-Z]+)$/\1/' | tr -d ' ')

                    # –Ø–∫—â–æ –æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É –Ω–µ –±—É–ª–∞ –∑–Ω–∞–π–¥–µ–Ω–∞ –∞–±–æ —î –ø–æ—Ä–æ–∂–Ω—å–æ—é, –ø—Ä–∏–ø—É—Å–∫–∞—î–º–æ "Bytes"
                    if [ -z "$size_unit_raw" ]; then
                        size_unit_raw="Bytes"
                    fi

                    # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤–∏—Ç—è–≥–Ω—É—Ç–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –æ–¥–∏–Ω–∏—Ü—é —É –±–∞–π—Ç–∏
                    remote_bytes=$(to_bytes "$size_value_raw" "$size_unit_raw")
                    
                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ —ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç > 0
                    if [ -n "$remote_bytes" ] && [ "$remote_bytes" -gt 0 ]; then
                      echo "üìä –†–æ–∑–º—ñ—Ä –Ω–∞ MinIO: $remote_bytes –±–∞–π—Ç ($size_value_raw $size_unit_raw)"
                      break # –£—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ä–æ–∑–º—ñ—Ä, –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É —Å–ø—Ä–æ–±
                    else
                      echo "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä –∞–±–æ –æ—Ç—Ä–∏–º–∞–Ω–æ –Ω—É–ª—å–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è '$size_value_raw' '$size_unit_raw'."
                    fi
                  else
                    echo "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ä—è–¥–æ–∫ 'Size :' —É –≤–∏–≤–æ–¥—ñ 'mc stat'."
                  fi
                else
                  echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ 'mc stat' –¥–ª—è 'minio/$bucket_name/${bucket_name}.xml': $stat_output"
                fi
                
                # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä, —á–µ–∫–∞—î–º–æ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é
                if [ -z "$remote_bytes" ] || [ "$remote_bytes" -eq 0 ]; then
                  echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è 3 —Å–µ–∫—É–Ω–¥–∏ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é..."
                  sleep 3
                fi
              done # –ö—ñ–Ω–µ—Ü—å —Ü–∏–∫–ª—É —Å–ø—Ä–æ–±
              
              # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—ñ—Å–ª—è –≤—Å—ñ—Ö —Å–ø—Ä–æ–± –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä
              if [ -z "$remote_bytes" ] || [ "$remote_bytes" = "0" ]; then
                echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥—ñ–π—Å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É '$filename' –∑ MinIO –ø—ñ—Å–ª—è 5 —Å–ø—Ä–æ–±."
                exit 1
              fi
              
              # –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–∞ –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—ñ–≤ –∑ –¥–æ–ø—É—Å–∫–æ–º
              # –î–æ–ø—É—Å—Ç–∏–º–∞ —Ä—ñ–∑–Ω–∏—Ü—è —É 1% (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ bc –¥–ª—è —Ç–æ—á–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å)
              threshold=$(echo "scale=0; $local_size / 100" | bc)
              diff=$(echo "$local_size - $remote_bytes" | bc)
              abs_diff=$(echo "$diff < 0 ? -$diff : $diff" | bc) # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –º–æ–¥—É–ª—è —Ä—ñ–∑–Ω–∏—Ü—ñ
              
              if [ "$abs_diff" -le "$threshold" ]; then
                echo "‚úÖ –†–æ–∑–º—ñ—Ä–∏ —Ñ–∞–π–ª—É '$filename' —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å (–¥–æ–ø—É—Å–∫ ¬±$threshold –±–∞–π—Ç)."
                echo "üìä –õ–æ–∫–∞–ª—å–Ω–∏–π: $local_size –±–∞–π—Ç"
                echo "üìä –í—ñ–¥–¥–∞–ª–µ–Ω–∏–π: $remote_bytes –±–∞–π—Ç"
              else
                echo "‚ö†Ô∏è –†–æ–∑–º—ñ—Ä–∏ —Ñ–∞–π–ª—É '$filename' –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å!"
                echo "üìä –õ–æ–∫–∞–ª—å–Ω–∏–π: $local_size –±–∞–π—Ç"
                echo "üìä –í—ñ–¥–¥–∞–ª–µ–Ω–∏–π: $remote_bytes –±–∞–π—Ç"
                echo "üîç –†—ñ–∑–Ω–∏—Ü—è: $diff –±–∞–π—Ç (–¥–æ–ø—É—Å–∫ ¬±$threshold –±–∞–π—Ç)."
                exit 1
              fi
            fi # –ö—ñ–Ω–µ—Ü—å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
          done # –ö—ñ–Ω–µ—Ü—å —Ü–∏–∫–ª—É —Ñ–∞–π–ª—ñ–≤
          
          echo "üéâ –í—Å—ñ —Ñ–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ!"

      # –ö—Ä–æ–∫ 13: –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª—ñ–≤
      - name: List all uploaded files
        run: |
          echo "üìã –°–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ —É MinIO:"
          # –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –ª–æ–∫–∞–ª—å–Ω—ñ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ XML —Ñ–∞–π–ª–∏, —â–æ–± –∑–Ω–∞—Ç–∏, —è–∫—ñ –±–∞–∫–µ—Ç–∏ –º–∞—é—Ç—å —ñ—Å–Ω—É–≤–∞—Ç–∏
          for xml_file in xml-outputs/*.xml; do
            if [ -f "$xml_file" ]; then
              bucket_name=$(basename "$xml_file" .xml)
              echo "üóÇÔ∏è –ë–∞–∫–µ—Ç: $bucket_name"
              # –í–∏–≤–æ–¥–∏–º–æ –≤–º—ñ—Å—Ç –±–∞–∫–µ—Ç—É. –î–æ–¥–∞—î–º–æ || true, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, —è–∫—â–æ –±–∞–∫–µ—Ç –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π.
              mc ls "minio/$bucket_name/" || echo "  (–ë–∞–∫–µ—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —ñ—Å–Ω—É—î)"
              echo "---"
            fi
          done