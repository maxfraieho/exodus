name: Generate Repository XML and Upload to MinIO

on:
  push:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "repomix.config.json"  # –î–æ–¥–∞–Ω–æ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
  pull_request:
    branches: [main]
    paths:
      - "src/site/notes/**"
      - "repomix.config.json"

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

      # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ XML —Ñ–∞–π–ª—É
      - name: Pack repository with Repomix
        uses: yamadashy/repomix/.github/actions/repomix@main
        with:
          output: repository.xml
          additional-args: --config repomix.config.json

      # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–∫—Ä–µ–º–∏—Ö XML —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
      - name: Generate separate XML files for each folder
        run: |
          mkdir -p xml-outputs
          
          # –ö–æ–ø—ñ—é—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª
          cp repository.xml xml-outputs/repository.xml
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î src/site/notes/
          if [ -d "src/site/notes/" ]; then
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–∫—Ä–∏–ø—Ç —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—ó
            cat > transliterate.sh << 'EOF'
            #!/bin/bash
            transliterate() {
                local input="$1"
                input=$(echo "$input" | sed 's/–∞/a/g; s/–±/b/g; s/–≤/v/g; s/–≥/h/g; s/“ë/g/g; s/–¥/d/g; s/–µ/e/g; s/—î/ye/g; s/–∂/zh/g; s/–∑/z/g; s/–∏/y/g; s/—ñ/i/g; s/—ó/yi/g; s/–π/y/g; s/–∫/k/g; s/–ª/l/g; s/–º/m/g; s/–Ω/n/g; s/–æ/o/g; s/–ø/p/g; s/—Ä/r/g; s/—Å/s/g; s/—Ç/t/g; s/—É/u/g; s/—Ñ/f/g; s/—Ö/kh/g; s/—Ü/ts/g; s/—á/ch/g; s/—à/sh/g; s/—â/shch/g; s/—å//g; s/—é/yu/g; s/—è/ya/g')
                input=$(echo "$input" | sed 's/–ê/A/g; s/–ë/B/g; s/–í/V/g; s/–ì/H/g; s/“ê/G/g; s/–î/D/g; s/–ï/E/g; s/–Ñ/Ye/g; s/–ñ/Zh/g; s/–ó/Z/g; s/–ò/Y/g; s/–Ü/I/g; s/–á/Yi/g; s/–ô/Y/g; s/–ö/K/g; s/–õ/L/g; s/–ú/M/g; s/–ù/N/g; s/–û/O/g; s/–ü/P/g; s/–†/R/g; s/–°/S/g; s/–¢/T/g; s/–£/U/g; s/–§/F/g; s/–•/Kh/g; s/–¶/Ts/g; s/–ß/Ch/g; s/–®/Sh/g; s/–©/Shch/g; s/–¨//g; s/–Æ/Yu/g; s/–Ø/Ya/g')
                input=$(echo "$input" | sed 's/[[:space:]]\+/-/g' | tr '[:upper:]' '[:lower:]')
                input=$(echo "$input" | sed 's/[^a-z0-9-]//g' | sed 's/--*/-/g; s/^-//; s/-$//')
                if [ ${#input} -lt 3 ]; then 
                    input="${input}bucket"
                fi
                if [ ${#input} -gt 63 ]; then 
                    input="${input:0:63}"
                fi
                echo "$input"
            }
            transliterate "$1"
            EOF
            chmod +x transliterate.sh
            
            # –ì–µ–Ω–µ—Ä—É—î–º–æ XML –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏
            for folder in src/site/notes/*/; do
              if [ -d "$folder" ]; then
                folder_name=$(basename "$folder")
                bucket_name=$(./transliterate.sh "$folder_name")
                
                echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è XML: $folder_name -> $bucket_name"
                
                # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GitHub Action –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
                npx repomix --config repomix.config.json --include "$folder/**" --output "xml-outputs/${bucket_name}.xml"
                
                if [ -s "xml-outputs/${bucket_name}.xml" ]; then
                  echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: ${bucket_name}.xml"
                else
                  echo "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏: ${bucket_name}.xml"
                fi
              fi
            done
            
            # –ì–µ–Ω–µ—Ä—É—î–º–æ common.xml –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
            npx repomix --config repomix.config.json --ignore "src/site/notes/**" --output "xml-outputs/common.xml"
            
            if [ -s "xml-outputs/common.xml" ]; then
              echo "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: common.xml"
            else
              echo "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏: common.xml"
            fi
          fi

      - name: Verify generated XML files
        run: |
          echo "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö XML —Ñ–∞–π–ª—ñ–≤:"
          
          if [ ! -s repository.xml ]; then
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞: repository.xml –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π"
            exit 1
          fi
          
          echo "‚úÖ repository.xml —Ä–æ–∑–º—ñ—Ä–æ–º $(stat -c%s repository.xml) –±–∞–π—Ç"
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω—à—ñ XML —Ñ–∞–π–ª–∏
          if [ -d "xml-outputs/" ]; then
            for xml_file in xml-outputs/*.xml; do
              if [ -f "$xml_file" ]; then
                size=$(stat -c%s "$xml_file")
                if [ "$size" -gt 0 ]; then
                  echo "‚úÖ $(basename "$xml_file") —Ä–æ–∑–º—ñ—Ä–æ–º $size –±–∞–π—Ç"
                else
                  echo "‚ö†Ô∏è $(basename "$xml_file") –ø–æ—Ä–æ–∂–Ω—ñ–π"
                fi
              fi
            done
          fi

      - name: Upload XML files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xml-outputs
          path: |
            repository.xml
            xml-outputs/
          retention-days: 7

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS CLI for MinIO via Cloudflare
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region us-east-1
          aws configure set default.s3.addressing_style path
          aws configure set default.s3.signature_version s3v4
          
          # –¢–µ—Å—Ç—É—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
          echo "üîê –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ MinIO..."
          if aws --endpoint-url https://apiminio.exodus.pp.ua s3 ls; then
            echo "‚úÖ –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MinIO —É—Å–ø—ñ—à–Ω–µ"
          else
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ MinIO"
            exit 1
          fi

      - name: Upload Repository XML to MinIO
        env:
          AWS_S3_DISABLE_MULTIPART: "1"
        run: |
          echo "üöÄ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è repository.xml –¥–æ MinIO..."
          
          # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª
          aws --endpoint-url https://apiminio.exodus.pp.ua \
            s3api put-object \
            --bucket exodusppua \
            --key "repository.xml" \
            --body "repository.xml" \
            --content-type application/xml \
            --cli-read-timeout 360 \
            --cli-connect-timeout 360
          
          if [[ $? -ne 0 ]]; then
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è repository.xml"
            exit 1
          fi
          
          echo "‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: repository.xml"

      - name: Upload individual XML files to MinIO
        env:
          AWS_S3_DISABLE_MULTIPART: "1"
        run: |
          if [ -d "xml-outputs/" ]; then
            echo "üöÄ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–∫—Ä–µ–º–∏—Ö XML —Ñ–∞–π–ª—ñ–≤..."
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∫–µ—Ç—ñ–≤
            cat > create_bucket.sh << 'EOF'
            #!/bin/bash
            bucket_name="$1"
            if aws --endpoint-url https://apiminio.exodus.pp.ua s3api head-bucket --bucket "$bucket_name" 2>/dev/null; then
              echo "‚ÑπÔ∏è –ë–∞–∫–µ—Ç '$bucket_name' –≤–∂–µ —ñ—Å–Ω—É—î"
            else
              echo "üî® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∫–µ—Ç—É '$bucket_name'"
              aws --endpoint-url https://apiminio.exodus.pp.ua s3api create-bucket --bucket "$bucket_name" --region us-east-1
            fi
            EOF
            chmod +x create_bucket.sh
            
            for xml_file in xml-outputs/*.xml; do
              if [ -f "$xml_file" ] && [ -s "$xml_file" ]; then
                bucket_name=$(basename "$xml_file" .xml)
                
                echo "üì¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: $xml_file -> –±–∞–∫–µ—Ç: $bucket_name"
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∫–µ—Ç
                ./create_bucket.sh "$bucket_name"
                
                # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª
                aws --endpoint-url https://apiminio.exodus.pp.ua \
                  s3api put-object \
                  --bucket "$bucket_name" \
                  --key "${bucket_name}.xml" \
                  --body "$xml_file" \
                  --content-type application/xml \
                  --cli-read-timeout 360 \
                  --cli-connect-timeout 360
                
                if [[ $? -eq 0 ]]; then
                  echo "‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${bucket_name}.xml"
                else
                  echo "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${bucket_name}.xml"
                fi
              fi
            done
          fi

      - name: Verify uploaded files
        run: |
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª
          if aws --endpoint-url https://apiminio.exodus.pp.ua s3api head-object --bucket exodusppua --key "repository.xml" > /dev/null 2>&1; then
            echo "‚úÖ repository.xml –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ exodusppua"
          else
            echo "‚ùå repository.xml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ exodusppua"
          fi
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–∫—Ä–µ–º—ñ —Ñ–∞–π–ª–∏
          if [ -d "xml-outputs/" ]; then
            for xml_file in xml-outputs/*.xml; do
              if [ -f "$xml_file" ] && [ -s "$xml_file" ]; then
                bucket_name=$(basename "$xml_file" .xml)
                
                if aws --endpoint-url https://apiminio.exodus.pp.ua s3api head-object --bucket "$bucket_name" --key "${bucket_name}.xml" > /dev/null 2>&1; then
                  echo "‚úÖ ${bucket_name}.xml –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ $bucket_name"
                else
                  echo "‚ùå ${bucket_name}.xml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∫–µ—Ç—ñ $bucket_name"
                fi
              fi
            done
          fi
